#########################################
# helpers/nfs
# Author: Rui Pinheiro
#
# network file system (e.g. nfs, cifs) related helpers


# Prints the file system name (e.g. "nfs") to stdout
# NOTE: Requires shelling out, so shouldn't be abused during shell init
function get_fs_name {
	local fspath="${1-.}"
	local fstype err

	fstype="$(stat -f -L -c %T "$fspath" 2>/dev/null)"
	err="$?"

	[[ "$err" -ne "0" ]] && return "$err"

	echo "$fstype"
}


# Is a remote file-system
# NOTE (1): Requires shelling out, so shouldn't be abused during shell init
# NOTE (2): The list of remote file systems is not exhaustive
# NOTE (3): Does not necessarily return the opposite of is_local_fs
function is_remote_fs {
	local fstype err

	fstype="$( get_fs_name $@ )"
	err="$?"
	[[ "$err" -ne "0" ]] && return 1

	case "$fstype" in
	"nfs"|"cifs"|"sshfs")
		return 0
		;;
	*)
		return 1
		;;
	esac
}

# Returns 0 if $1 is a local file-system
# NOTE (1): Requires shelling out, so shouldn't be abused during shell init
# NOTE (2): The list of local file systems is not exhaustive
# NOTE (3): Does not necessarily return the opposite of is_remote_fs
function is_local_fs {
	local fstype err

	fstype="$( get_fs_name $@ )"
	err="$?"
	[[ "$err" -ne "0" ]] && return 0

	case "$fstype" in
	"ext"*|"ntfs"*)
		return 0
		;;
	*)
		return 1
		;;
	esac
}
